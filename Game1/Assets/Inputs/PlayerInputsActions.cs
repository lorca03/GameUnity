//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Inputs/PlayerInputsActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputsActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputsActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputsActions"",
    ""maps"": [
        {
            ""name"": ""InputsPlayer"",
            ""id"": ""fbdbfafe-aab7-441d-ace6-4a8f8ccc868d"",
            ""actions"": [
                {
                    ""name"": ""Movment"",
                    ""type"": ""Button"",
                    ""id"": ""306b654e-9ab5-416a-83b3-5932e01ae1fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""8af984d7-6415-4c9b-9fde-cbb34d551a2a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Disparar"",
                    ""type"": ""Button"",
                    ""id"": ""d82623f9-c2c8-436f-9a85-a6ce92318811"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pausa"",
                    ""type"": ""Button"",
                    ""id"": ""ee8ee4bf-92ae-497a-b776-ca5c1901ca1d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IrBoomerang"",
                    ""type"": ""Button"",
                    ""id"": ""73387f2d-3049-40c1-b2b0-3bf3c09bffa4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""fec58d75-8e9b-4174-88d8-c126c388b52f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movment"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""41d05eb3-0257-439f-88cb-bf0627639b0f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c9bccf65-60f0-47cf-a5a8-84208f30e16e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c0bf3707-abb4-40e1-9748-43bc85bb3fa7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fbcfd994-8e0d-40d8-93fc-b53223b73281"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e1c4a236-2c48-4fa5-b52d-01777901033a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movment"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""38235acc-6194-4abf-a0a5-241d76a149f9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""759af994-9555-416f-adde-5b9c880c55fb"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8ff36720-948e-4360-bc5a-49f16aacb5f9"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""99400a36-7689-4196-aa4b-f3b5799c387f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a2f615f9-f733-4039-9c76-774f4d3e1452"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43227884-9dcd-4a93-8a7c-2fe35bcb6a1d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e76c2b3b-5313-4365-8497-3eab7e38e95a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa5fe457-f964-4d53-bcf6-8fe6128f0233"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Disparar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""035f65d5-db8d-4854-ae46-fbaf72528ee5"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Disparar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9927968e-77c3-4e0a-818b-c48dfa023827"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pausa"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f22c436-57bc-4f92-bb9f-5c8ab85d3c12"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pausa"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20ee651e-342c-4c4c-a2bf-cb169aa923b5"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IrBoomerang"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23295d12-9e56-4516-a4cf-e70b5a7d8c2f"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IrBoomerang"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""NoMovimiento"",
            ""id"": ""8fb8fc74-e7a0-4ea1-b4c2-f1e2f8faaaae"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""b3454274-87ef-4556-8f8e-8b0f4b2b7341"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""07788ffa-f05e-48e9-9d5d-1d60a8ff3bf9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InputsPlayer
        m_InputsPlayer = asset.FindActionMap("InputsPlayer", throwIfNotFound: true);
        m_InputsPlayer_Movment = m_InputsPlayer.FindAction("Movment", throwIfNotFound: true);
        m_InputsPlayer_Jump = m_InputsPlayer.FindAction("Jump", throwIfNotFound: true);
        m_InputsPlayer_Disparar = m_InputsPlayer.FindAction("Disparar", throwIfNotFound: true);
        m_InputsPlayer_Pausa = m_InputsPlayer.FindAction("Pausa", throwIfNotFound: true);
        m_InputsPlayer_IrBoomerang = m_InputsPlayer.FindAction("IrBoomerang", throwIfNotFound: true);
        // NoMovimiento
        m_NoMovimiento = asset.FindActionMap("NoMovimiento", throwIfNotFound: true);
        m_NoMovimiento_Newaction = m_NoMovimiento.FindAction("New action", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InputsPlayer
    private readonly InputActionMap m_InputsPlayer;
    private List<IInputsPlayerActions> m_InputsPlayerActionsCallbackInterfaces = new List<IInputsPlayerActions>();
    private readonly InputAction m_InputsPlayer_Movment;
    private readonly InputAction m_InputsPlayer_Jump;
    private readonly InputAction m_InputsPlayer_Disparar;
    private readonly InputAction m_InputsPlayer_Pausa;
    private readonly InputAction m_InputsPlayer_IrBoomerang;
    public struct InputsPlayerActions
    {
        private @PlayerInputsActions m_Wrapper;
        public InputsPlayerActions(@PlayerInputsActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movment => m_Wrapper.m_InputsPlayer_Movment;
        public InputAction @Jump => m_Wrapper.m_InputsPlayer_Jump;
        public InputAction @Disparar => m_Wrapper.m_InputsPlayer_Disparar;
        public InputAction @Pausa => m_Wrapper.m_InputsPlayer_Pausa;
        public InputAction @IrBoomerang => m_Wrapper.m_InputsPlayer_IrBoomerang;
        public InputActionMap Get() { return m_Wrapper.m_InputsPlayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InputsPlayerActions set) { return set.Get(); }
        public void AddCallbacks(IInputsPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_InputsPlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InputsPlayerActionsCallbackInterfaces.Add(instance);
            @Movment.started += instance.OnMovment;
            @Movment.performed += instance.OnMovment;
            @Movment.canceled += instance.OnMovment;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Disparar.started += instance.OnDisparar;
            @Disparar.performed += instance.OnDisparar;
            @Disparar.canceled += instance.OnDisparar;
            @Pausa.started += instance.OnPausa;
            @Pausa.performed += instance.OnPausa;
            @Pausa.canceled += instance.OnPausa;
            @IrBoomerang.started += instance.OnIrBoomerang;
            @IrBoomerang.performed += instance.OnIrBoomerang;
            @IrBoomerang.canceled += instance.OnIrBoomerang;
        }

        private void UnregisterCallbacks(IInputsPlayerActions instance)
        {
            @Movment.started -= instance.OnMovment;
            @Movment.performed -= instance.OnMovment;
            @Movment.canceled -= instance.OnMovment;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Disparar.started -= instance.OnDisparar;
            @Disparar.performed -= instance.OnDisparar;
            @Disparar.canceled -= instance.OnDisparar;
            @Pausa.started -= instance.OnPausa;
            @Pausa.performed -= instance.OnPausa;
            @Pausa.canceled -= instance.OnPausa;
            @IrBoomerang.started -= instance.OnIrBoomerang;
            @IrBoomerang.performed -= instance.OnIrBoomerang;
            @IrBoomerang.canceled -= instance.OnIrBoomerang;
        }

        public void RemoveCallbacks(IInputsPlayerActions instance)
        {
            if (m_Wrapper.m_InputsPlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInputsPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_InputsPlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InputsPlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InputsPlayerActions @InputsPlayer => new InputsPlayerActions(this);

    // NoMovimiento
    private readonly InputActionMap m_NoMovimiento;
    private List<INoMovimientoActions> m_NoMovimientoActionsCallbackInterfaces = new List<INoMovimientoActions>();
    private readonly InputAction m_NoMovimiento_Newaction;
    public struct NoMovimientoActions
    {
        private @PlayerInputsActions m_Wrapper;
        public NoMovimientoActions(@PlayerInputsActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_NoMovimiento_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_NoMovimiento; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NoMovimientoActions set) { return set.Get(); }
        public void AddCallbacks(INoMovimientoActions instance)
        {
            if (instance == null || m_Wrapper.m_NoMovimientoActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_NoMovimientoActionsCallbackInterfaces.Add(instance);
            @Newaction.started += instance.OnNewaction;
            @Newaction.performed += instance.OnNewaction;
            @Newaction.canceled += instance.OnNewaction;
        }

        private void UnregisterCallbacks(INoMovimientoActions instance)
        {
            @Newaction.started -= instance.OnNewaction;
            @Newaction.performed -= instance.OnNewaction;
            @Newaction.canceled -= instance.OnNewaction;
        }

        public void RemoveCallbacks(INoMovimientoActions instance)
        {
            if (m_Wrapper.m_NoMovimientoActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(INoMovimientoActions instance)
        {
            foreach (var item in m_Wrapper.m_NoMovimientoActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_NoMovimientoActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public NoMovimientoActions @NoMovimiento => new NoMovimientoActions(this);
    public interface IInputsPlayerActions
    {
        void OnMovment(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnDisparar(InputAction.CallbackContext context);
        void OnPausa(InputAction.CallbackContext context);
        void OnIrBoomerang(InputAction.CallbackContext context);
    }
    public interface INoMovimientoActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
